version: "3"
services:
  graphql:
    build: ./server
    depends_on:
      - postgres
      - redis
    links:
      - postgres
    ports:
      - "4000:4000"
      - "4001:40001"
    networks:
      - deploy
      environment:
        - DB_USER=postgres
        - DB_DATABASE=instagram-ts-gql
        - DB_PASS=bulat551
        - DB_HOST=postgres
        - REDIS_PORT=6379
        - FRONTEND_HOST=http://localhost:3000
        - SEND_GRID_API_KEY=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
        - SESSION_SECRET=1nst@gram_cl0ne
        - ACCESS_TOKEN_SECRET=accestokensecret
        - REFRESH_TOKEN_SECRET=refreshtokensecret
  #    container_name: graphql
  #      build: ./server
  #      restart: unless-stopped
  #      working_dir: "/go/src/token-svc"
  #      command: [ "./scripts/build/wait-for-it.sh", "postgres:5432" ]
  #      depends_on:
  #        -
  #      ports:
  #        - "4000:4000"
  #        - "4001:4001"
  #      volumes:
  #        - "./:/go/src/token-svc"
  #        - "/tmp/certs:/tmp/certs:ro"
  #        - "/tmp/log:/tmp/log"

  client:
    build: ./client
    image: 'instagram-client'
    ports:
      - "3000:3000"
    expose:
      - "3000"

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgvol:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: bulat551
      POSTGRES_USER: postgres
      POSTGRES_DB: instagram-gql-ts

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server
    ports:
      - "6379:6379"
    environment:
      - REDIS_PORT=6379
    networks:
      - deploy
    volumes:
      - ./redis-data:/var/lib/redis

volumes:
  postgres-data:
  redis-data:

networks:
  deploy:
    driver: bridge
