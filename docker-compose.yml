version: "3"
services:
  postgres:
    image: postgres:latest
    container_name: postgresdb
    networks:
      - deploy
    environment:
      - database.env
    ports:
      - "5432:5432"
    volumes:
      - pgvol:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    command: [ "redis-server","/usr/local/etc/redis/redis.conf"]
    networks:
      - deploy
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/var/lib/redis

  graphql:
    build: ./packages/server
    restart: always
    depends_on:
      - postgres
      - redis
    links:
      - postgres
      - redis
    ports:
      - "4000:4000"
      - "4001:40001"
    networks:
      - deploy
    environment:
      DB_HOST: postgresdb
      DB_PORT: 5432
      REDIS_HOST: 127.0.0.1
  #    container_name: graphql
  #      build: ./server
  #  DATABASE_URL: postgresql://postgres:bulat551@postgres:5432/instagram-ts-gql
  #      restart: unless-stopped
  #      working_dir: "/go/src/token-svc"
  #      command: [ "./scripts/build/wait-for-it.sh", "postgres:5432" ]
  #      depends_on:
  #        -
  #      ports:
  #        - "4000:4000"
  #        - "4001:4001"
  #      volumes:
  #        - "./:/go/src/token-svc"
  #        - "/tmp/certs:/tmp/certs:ro"
  #        - "/tmp/log:/tmp/log"

  #  client:
  #    build: ./packages/client
  #    image: 'instagram-client'
  #    ports:
  #      - "3000:3000"
  #    expose:
  #      - "3000"


volumes:
  pgvol:
  redis-data:

networks:
  deploy:
    driver: bridge
